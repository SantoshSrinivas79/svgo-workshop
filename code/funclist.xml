<deck>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Starting and Ending</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">New(w io.Writer) *SVG</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Constructor, specify the output destination.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Start(w int, h int, ns ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Begin document with the specified width and height.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Startunit(w int, h int, unit string, ns ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Begin with width and height in the specified units.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">Startpercent(w int, h int, ns ...string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Begin with width and height as percentages.</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">Startview(w, h, minx, miny, vw, vh int)</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Begin with the specified width, height, and viewbox.</text>
		<text xp="2.50" yp="32.10" sp="2.10" color="rgb(0,0,127)" font="sans">StartviewUnit(w, h int, unit string, minx, miny, vw, vh int)</text>
		<text xp="2.50" yp="28.40" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Like StartView, using units.</text>
		<text xp="2.50" yp="21.00" sp="2.10" color="rgb(0,0,127)" font="sans">Startraw(ns ...string)</text>
		<text xp="2.50" yp="17.30" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Begin with arbitrary attributes.</text>
		<text xp="2.50" yp="9.90" sp="2.10" color="rgb(0,0,127)" font="sans">End()</text>
		<text xp="2.50" yp="6.20" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">End the SVG document.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Metadata</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Desc(s string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define the document's description.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Title(s string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define the document's title.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Utility</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Script(scriptype string, data ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Defines a script with a specified type. (e.g. text/javascript).</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Grid(x int, y int, w int, h int, n int, s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Draw a grid at (x,y), sized at (w,h), increment n..</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Groups and Definitions</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Gstyle(s string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">begins a group, with the specified style.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Group(s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">begins a group with arbitrary attributes.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Gid(s string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">begins a group, with the specified id.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">Gend()</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">ends a group.</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">Def()</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">begins a defintion block.</text>
		<text xp="2.50" yp="32.10" sp="2.10" color="rgb(0,0,127)" font="sans">DefEnd()</text>
		<text xp="2.50" yp="28.40" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">ends a defintion block.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Markers and Patterns</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Marker(id string, x, y, width, height int, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define a marker.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">MarkerEnd()</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">End the marker.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Pattern(id string, x, y, width, height int, putype string, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define a pattern.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">PatternEnd()</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">End a pattern.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Links</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Link(href string, title string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define a link.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">LinkEnd()</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">End the link block.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Use(x int, y int, link string, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define the use of a link.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Masking and Clipping</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Mask(id string, x int, y int, w int, h int, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define a mask.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">MaskEnd()</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">End the mask definition.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">ClipPath(s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Define a clipping mask.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">ClipEnd()</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">End the clipping path definition.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Transforms</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Gtransform(s string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">begins a group, with the specified transform.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Translate(x, y int)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">begins coordinate translation.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Scale(n float64)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">coordinate system by n.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">ScaleXY(dx, dy float64)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">scales the coordinate system by dx and dy.</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">Rotate(r float64)</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">rotates the coordinate system by r degrees.</text>
		<text xp="2.50" yp="32.10" sp="2.10" color="rgb(0,0,127)" font="sans">TranslateRotate(x, y int, r float64)</text>
		<text xp="2.50" yp="28.40" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">translate to (x, y), then rotates to r degrees.</text>
		<text xp="2.50" yp="21.00" sp="2.10" color="rgb(0,0,127)" font="sans">RotateTranslate(x, y int, r float64)</text>
		<text xp="2.50" yp="17.30" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">rotates by r degrees, then translates to (x, y).</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Skewing</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">SkewX(a float64)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">skews the x coordinate system by angle a.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">SkewY(a float64)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">skews the y coordinate system by angle a.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">SkewXY(ax, ay float64)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">skews x and y coordinates by ax, ay respectively.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Shapes (optional style or attributes in s)</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Circle(x, y, r int, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Circle centered at (x,y), with radius r.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Ellipse(x, y, w, h int, s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Ellipse centered at (x,y) height (h), width (w).</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Polygon(x []int, y []int, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Closed polygon with matched coordinates in x and y.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">Rect(x, y, w, h int, s ...string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Rectangle with upper left at (x,y), width (w), height (h).</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">CenterRect(x, y, w, h int, s ...string)</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Rectangle centered at (x,y), width (w), height (h).</text>
		<text xp="2.50" yp="32.10" sp="2.10" color="rgb(0,0,127)" font="sans">Roundrect(x, y, w, h, rx, ry int, s ...string)</text>
		<text xp="2.50" yp="28.40" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Rounded rectangle; upper left at (x,y), width (w), height (h), corner radii (rx,ry).</text>
		<text xp="2.50" yp="21.00" sp="2.10" color="rgb(0,0,127)" font="sans">Square(x, y, l int, s ...string)</text>
		<text xp="2.50" yp="17.30" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Square with upper left at (x,y), slides length (l).</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Paths and Curves (optional style or attributes in s).</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Path(d string, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Artibrary path specified in d.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Arc(sx, sy, ax, ay, r int, large bool, sweep bool, ex ey int, s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Arc: begin (sx,sy), ending (ex, ey) width and height (ax, ay), the x axis rotation is r. If sweep is true, the arc direction is clockwise. If large is true, arc sweep angle is greater than 180 deg.</text>
		<text xp="2.50" yp="61.70" sp="2.10" color="rgb(0,0,127)" font="sans">Bezier(sx, sy, cx, cy, px, py, ex, ey s ...string)</text>
		<text xp="2.50" yp="58.00" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Cubic bezier: start point (sx,sy), control (px,py) and (cx,cy), endpoint (ex, ey).</text>
		<text xp="2.50" yp="50.60" sp="2.10" color="rgb(0,0,127)" font="sans">Qbez(sx, sy, cx, cy, ex, ey int, s ...string)</text>
		<text xp="2.50" yp="46.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Quadratic bezier: start point (sx,sy), control (cx,cy), endpoint (ex, ey)</text>
		<text xp="2.50" yp="39.50" sp="2.10" color="rgb(0,0,127)" font="sans">Qbezier(sx, sy, cy, ex, ey, tx, ty int, s ...string)</text>
		<text xp="2.50" yp="35.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Quadratic Bezier:  start (sx, sy), ending at (tx,ty), with control points are at (cx,cy), (ex,ey).</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Lines.</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Line(x1 int, y1 int, x2 int, y2 int, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Straight line from (x1,y1) to (x2,y2).</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Polyline(x []int, y []int, s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Polyline using matched coordinates in x and y.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Images and Text.</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Image(x int, y int, w int, h int, link string, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Place the image with dimensions (w,h) at (x, y).</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Text(x int, y int, t string, s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Place text at (x,y).</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Textpath(t string, pathid string, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Place text on a path specified in pathid.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">Textlines(x, y int, s []string, size, spacing int, fill, align string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Places lines of text beginning at (x,y).</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Colors and Gradients.</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">RGB(r int, g int, b int) string</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Specify a color as a RGB triple.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">RGBA(r int, g int, b int, a float64) string</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Specify a color as RGBA.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">LinearGradient(id string, x1, y1, x2, y2 uint8, sc []Offcolor)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Specify a linear gradient.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">RadialGradient(id string, cx, cy, r, fx, fy uint8, sc []Offcolor)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Specify a radial gradient.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Filter Effects</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Filter(id string, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Begin the filter definition.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Fend()</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">End the filter definition.</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Blend and Color Matrix Filters</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">FeBlend(fs Filterspec, mode string, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a Blend filter primitive</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">FeColorMatrix(fs Filterspec, values [20]float64, s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a color matrix filter primitive, with matrix values</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">FeColorMatrixHue(fs Filterspec, value float64, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a color matrix filter primitive, with hue rotation values</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">FeColorMatrixSaturate(fs Filterspec, value float64, s ...string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a color matrix filter primitive, with saturation values</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">FeColorMatrixLuminence(fs Filterspec, s ...string)</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a color matrix filter primitive, with luminence values</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Miscellaneous Filters (1)</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">FeComponentTransfer()</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">begins a feComponent filter element</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">FeCompEnd()</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">ends a feComponent filter element</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">FeComposite(fs Filterspec, operator string, k1, k2, k3, k4 int, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feComposite filter primitive</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">FeConvolveMatrix(fs Filterspec, matrix [9]int, s ...string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feConvolveMatrix filter primitive</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">FeDiffEnd()</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">ends a diffuse lighting filter primitive container</text>
		<text xp="2.50" yp="32.10" sp="2.10" color="rgb(0,0,127)" font="sans">FeDisplacementMap(fs Filterspec, scale float64, xchannel, ychannel string, s ...string)</text>
		<text xp="2.50" yp="28.40" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feDisplacementMap filter primitive</text>
		<text xp="2.50" yp="21.00" sp="2.10" color="rgb(0,0,127)" font="sans">FeFuncLinear(channel string, slope, intercept float64)</text>
		<text xp="2.50" yp="17.30" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a linear style function for the feFunc{R|G|B|A} filter element</text>
		<text xp="2.50" yp="9.90" sp="2.10" color="rgb(0,0,127)" font="sans">FeFuncGamma(channel string, amplitude, exponent, offset float64)</text>
		<text xp="2.50" yp="6.20" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies the curve values for gamma correction for the feFunc{R|G|B|A} filter element</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Miscellaneous Filters (2)</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">FeFuncTable(channel string, tv []float64)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies the table of values for the feFunc{R|G|B|A} filter element</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">FeFuncDiscrete(channel string, tv []float64)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies the discrete values for the feFunc{R|G|B|A} filter element</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">FeGaussianBlur(fs Filterspec, stdx, stdy float64, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a Gaussian Blur filter primitive</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">FeImage(href string, result string, s ...string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feImage filter primitive</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">FeMerge(nodes []string, s ...string)</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feMerge filter primitive, containing feMerge elements</text>
		<text xp="2.50" yp="32.10" sp="2.10" color="rgb(0,0,127)" font="sans">FeMorphology(fs Filterspec, op string, xradius, yradius float64, s ...string)</text>
		<text xp="2.50" yp="28.40" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feMorphologyLight filter primitive</text>
		<text xp="2.50" yp="21.00" sp="2.10" color="rgb(0,0,127)" font="sans">FeOffset(fs Filterspec, dx, dy int, s ...string)</text>
		<text xp="2.50" yp="17.30" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies the feOffset filter primitive</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Lighting Filters (1)</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">FeDiffuseLighting(fs Filterspec, scale, constant float64, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a diffuse lighting filter primitive</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">FeDistantLight(fs Filterspec, azimuth, elevation float64, s ...string)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feDistantLight filter primitive</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">FeFlood(fs Filterspec, color string, opacity float64, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a flood filter primitive</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">FePointLight(x, y, z float64, s ...string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a fePpointLight filter primitive</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">Lighting Filters (2)</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">FeSpecularLighting(fs Filterspec, scale, constant float64, exponent int, color string, s ...string)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a specular lighting filter primitive</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">FeSpecEnd()</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">ends a specular lighting filter primitive container</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">FeSpotLight(fs Filterspec, x, y, z, px, py, pz float64, s ...string)</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a feSpotLight filter primitive</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">FeTile(fs Filterspec, in string, s ...string)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies the tile utility filter primitive</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">FeTurbulence(fs Filterspec, ft string, bfx, bfy float64, oct int, seed int64, stitch bool, s ...string)</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">specifies a turbulence filter primitive</text>
	</slide>
	<slide>
		<text xp="2.50" yp="95.00" sp="3">High-level filters</text>
		<text xp="2.50" yp="87.60" sp="2.10" color="rgb(0,0,127)" font="sans">Blur(p float64)</text>
		<text xp="2.50" yp="83.90" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Blur by p.</text>
		<text xp="2.50" yp="76.50" sp="2.10" color="rgb(0,0,127)" font="sans">Brightness(p float64)</text>
		<text xp="2.50" yp="72.80" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Bighten by p.</text>
		<text xp="2.50" yp="65.40" sp="2.10" color="rgb(0,0,127)" font="sans">Grayscale()</text>
		<text xp="2.50" yp="61.70" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Set as grayscale.</text>
		<text xp="2.50" yp="54.30" sp="2.10" color="rgb(0,0,127)" font="sans">HueRotate(a float64)</text>
		<text xp="2.50" yp="50.60" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Rotate the colorspace around angle a.</text>
		<text xp="2.50" yp="43.20" sp="2.10" color="rgb(0,0,127)" font="sans">Invert()</text>
		<text xp="2.50" yp="39.50" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Invert colors.</text>
		<text xp="2.50" yp="32.10" sp="2.10" color="rgb(0,0,127)" font="sans">Saturate(p float64)</text>
		<text xp="2.50" yp="28.40" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Set the saturation by p percent.</text>
		<text xp="2.50" yp="21.00" sp="2.10" color="rgb(0,0,127)" font="sans">Sepia()</text>
		<text xp="2.50" yp="17.30" sp="2.00" color="rgb(80,80,80)" font="serif" type="block" wp="80">Filter to a sepia tone.</text>
	</slide>
</deck>
